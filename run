#!/usr/bin/python3
"Runs a simple HTTP server to serve the benchmarked web page."

import os
import multiprocessing
import sys

from http.server import ThreadingHTTPServer
from http.server import SimpleHTTPRequestHandler

HOST = ""
PORT = 8000
TEST_FOLDER = "place_your_html_files_here"

def cleanup():
    os.system("rm index.html")

def run_http_server():
    "Runs the actual server."
    server = ThreadingHTTPServer((HOST, PORT), SimpleHTTPRequestHandler)
    server.serve_forever()

def prepare():
    htmls = [os.path.join(TEST_FOLDER, f) for f in os.listdir(TEST_FOLDER) \
             if f.endswith(".html")]
    if len(htmls) == 0:
        print("Please copy the pages to test into '" + TEST_FOLDER + "'")
        sys.exit(0)

    with open("index.html.template") as f:
        template = f.read()
        output = template.replace("{{HTML_FILES}}", str(htmls))
        with open("index.html", "w") as g:
            g.write(output)

def run():
    "Runs the server used for the benchmark until it is interrupted."
    try:
        http = multiprocessing.Process(target=run_http_server)
        displayed_host = HOST
        if not displayed_host:
            displayed_host = "localhost"
        print("Serving at http://" + displayed_host + ":" + str(PORT))
        print("Hit Ctrl-C to stop.")
        http.start()
        http.join()

    except KeyboardInterrupt:
        print("Stopping...")
        http.terminate()
        sys.exit(0)

    finally:
        cleanup()

if __name__ == '__main__':
    prepare()
    run()
