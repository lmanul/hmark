#!/usr/bin/python3
"Runs a simple HTTP server to serve the benchmarked web page."

import os
import multiprocessing
import sys

from http.server import ThreadingHTTPServer
from http.server import SimpleHTTPRequestHandler

HOST = "localhost"
PORT = 8000
FIRST_PATH = "place_your_html_file_here/a.html"

def cleanup():
    os.system("rm index.html")

def run_http_server():
    "Runs the actual server."
    server = ThreadingHTTPServer((HOST, PORT), SimpleHTTPRequestHandler)
    server.serve_forever()

def prepare():
    os.system("cp index.html.template index.html")

def run():
    "Runs the server used for the benchmark until it is interrupted."
    if not os.path.exists(FIRST_PATH):
        print("Please copy the HTML to test into " + FIRST_PATH)
        sys.exit(0)
    try:
        http = multiprocessing.Process(target=run_http_server)
        print("Serving at http://" + HOST + ":" + str(PORT))
        print("Hit Ctrl-C to stop.")
        http.start()
        http.join()

    except KeyboardInterrupt:
        print("Stopping...")
        http.terminate()
        sys.exit(0)

    finally:
        cleanup()

if __name__ == '__main__':
    prepare()
    run()
